name: "expose-tunnel"
description: "Easily create tunnels to access your GitHub Action workflows from public endpoints"
inputs:
  service:
    required: true
    description: Which tunneling service to use
  port:
    required: true
    description: The local port we are creating a tunnel to

  selfHostedEndpoint:
    required: false
    description: No, unless `bore.selfhosted` was specified as the `service`
  fallback:
    required: false
    description: Fallback strategy if the preferred `service` isn't available (e.g. self-hosted is down, fallback to managed service)
  blocking:
    required: false
    description: If the step should block and keep the job alive for the specified amount of time. This means you won't be able to use the output in later steps since the tunnel will be closing after the step.
outputs:
  time: # id of output
    description: "The time"
  thread_ts: # threaded timestamp on the message that was posted when using bot token
    description: "The timestamp on the message that was posted into Slack when using bot token"
  ts: # timestamp of message posted
    description: "The timestamp on the message that was posted into Slack when using bot token"
runs:
  # using: "node16"
  # main: "src/main.js"
  using: "composite"
  steps:
    # Start the tunneling process in the background.
    - run: node dist/index.js &
      shell: bash

    # Wait for it to have set the tunnel url and be done.
    - run: timeout 1m bash -c 'until [ -f ./.tunnel-is-ready ]; do sleep 1; echo "Waiting for ./.tunnel-is-ready to be ready..."; done;'
      shell: bash
